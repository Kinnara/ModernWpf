<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. See LICENSE in the project root for license information. -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ModernWpf.Controls"
    xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:ui="http://schemas.modernwpf.com/2019">

    <sys:Double x:Key="TeachingTipMinHeight">40</sys:Double>
    <sys:Double x:Key="TeachingTipMaxHeight">520</sys:Double>
    <sys:Double x:Key="TeachingTipMinWidth">320</sys:Double>
    <sys:Double x:Key="TeachingTipMaxWidth">336</sys:Double>

    <Thickness x:Key="TeachingTipRightButtonMargin">6,12,0,0</Thickness>
    <Thickness x:Key="TeachingTipLeftButtonMargin">0,12,6,0</Thickness>

    <Thickness x:Key="TeachingTipMainContentPresentMargin">0,12,0,0</Thickness>
    <Thickness x:Key="TeachingTipMainContentAbsentMargin">0,0,0,0</Thickness>

    <Thickness x:Key="TeachingTipTitleStackPanelMarginWithHeaderCloseButton">0,0,28,0</Thickness>
    <Thickness x:Key="TeachingTipTitleStackPanelMarginWithFooterCloseButton">0,0,0,0</Thickness>

    <Thickness x:Key="TeachingTipIconPresenterMarginWithIcon">0,0,12,0</Thickness>
    <Thickness x:Key="TeachingTipIconPresenterMarginWithoutIcon">0,0,0,0</Thickness>

    <Thickness x:Key="TeachingTipContentBorderThicknessTop">1,1,1,0</Thickness>
    <Thickness x:Key="TeachingTipContentBorderThicknessBottom">1,0,1,1</Thickness>
    <Thickness x:Key="TeachingTipContentBorderThicknessLeft">1,1,0,1</Thickness>
    <Thickness x:Key="TeachingTipContentBorderThicknessRight">0,1,1,1</Thickness>
    <Thickness x:Key="TeachingTipContentBorderThicknessUntargeted">1,1,1,1</Thickness>

    <Thickness x:Key="TeachingTipTailPolygonMarginTop">0,-2,0,0</Thickness>
    <Thickness x:Key="TeachingTipTailPolygonMarginBottom">0,0,0,-2</Thickness>
    <Thickness x:Key="TeachingTipTailPolygonMarginLeft">-2,0,0,0</Thickness>
    <Thickness x:Key="TeachingTipTailPolygonMarginRight">0,0,-2,0</Thickness>

    <GridLength x:Key="TeachingTipTailShortSideLength">8</GridLength>
    <GridLength x:Key="TeachingTipTailMargin">10</GridLength>

    <sys:Double x:Key="TeachingTipAlternateCloseButtonSize">40</sys:Double>
    <sys:Double x:Key="TeachingTipAlternateCloseButtonGlyphSize">12</sys:Double>

    <Thickness x:Key="TeachingTipContentMargin">12</Thickness>

    <sys:Double x:Key="TeachingTipTopHighlightHeight">1</sys:Double>
    <sys:Double x:Key="TeachingTipBorderThickness">1</sys:Double>
    <Thickness x:Key="TeachingTipTopHighlightOffsetForBorder">0,1,0,0</Thickness>

    <Style x:Key="DefaultTeachingTipStyle" TargetType="local:TeachingTip">
        <Setter Property="Background" Value="{DynamicResource TeachingTipBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TeachingTipForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TeachingTipBorderBrush}"/>
        <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
        <Setter Property="ActionButtonStyle" Value="{DynamicResource DefaultButtonStyle}"/>
        <Setter Property="CloseButtonStyle" Value="{DynamicResource DefaultButtonStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:TeachingTip">
                    <Border x:Name="Container"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="LightDismissStates">
                                <VisualState x:Name="LightDismiss">
                                    <!--<VisualState.Setters>
                                        <Setter Target="TailEdgeBorder.Background" Value="{DynamicResource TeachingTipTransientBackground}"/>
                                        <Setter Target="TailPolygon.Fill" Value="{DynamicResource TeachingTipTransientBackground}"/>
                                        <Setter Target="TopTailPolygonHighlight.Fill" Value="{DynamicResource TeachingTipTransientBackground}"/>
                                        <Setter Target="ContentRootGrid.Background" Value="{DynamicResource TeachingTipTransientBackground}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="NormalDismiss"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonsStates">
                                <VisualState x:Name="NoButtonsVisible">
                                    <!--<VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Collapsed"/>

                                        <Setter Target="ActionButton.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="ActionButtonVisible">
                                    <!--<VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Collapsed"/>

                                        <Setter Target="ActionButton.Visibility" Value="Visible"/>
                                        <Setter Target="ActionButton.(Grid.Column)" Value="1"/>
                                        <Setter Target="ActionButton.Margin" Value="{StaticResource TeachingTipRightButtonMargin}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="CloseButtonVisible">
                                    <!--<VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Visible"/>
                                        <Setter Target="CloseButton.Margin" Value="{StaticResource TeachingTipRightButtonMargin}"/>

                                        <Setter Target="ActionButton.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="BothButtonsVisible">
                                    <!--<VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Visible"/>
                                        <Setter Target="CloseButton.Margin" Value="{StaticResource TeachingTipRightButtonMargin}"/>

                                        <Setter Target="ActionButton.Visibility" Value="Visible"/>
                                        <Setter Target="ActionButton.(Grid.Column)" Value="0"/>
                                        <Setter Target="ActionButton.Margin" Value="{StaticResource TeachingTipLeftButtonMargin}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ContentStates">
                                <VisualState x:Name="Content">
                                    <!--<VisualState.Setters>
                                        <Setter Target="MainContentPresenter.Margin" Value="{StaticResource TeachingTipMainContentPresentMargin}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="NoContent">
                                    <!--<VisualState.Setters>
                                        <Setter Target="MainContentPresenter.Margin" Value="{StaticResource TeachingTipMainContentAbsentMargin}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CloseButtonLocations">
                                <VisualState x:Name="HeaderCloseButton">
                                    <!--<VisualState.Setters>
                                        <Setter Target="TitlesStackPanel.Margin" Value="{StaticResource TeachingTipTitleStackPanelMarginWithHeaderCloseButton}"/>
                                        <Setter Target="AlternateCloseButton.Visibility" Value="Visible"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="FooterCloseButton">
                                    <!--<VisualState.Setters>
                                        <Setter Target="TitlesStackPanel.Margin" Value="{StaticResource TeachingTipTitleStackPanelMarginWithFooterCloseButton}"/>
                                        <Setter Target="AlternateCloseButton.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="Icon">
                                    <!--<VisualState.Setters>
                                        <Setter Target="IconPresenter.Margin" Value="{StaticResource TeachingTipIconPresenterMarginWithIcon}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="NoIcon">
                                    <!--<VisualState.Setters>
                                        <Setter Target="IconPresenter.Margin" Value="{StaticResource TeachingTipIconPresenterMarginWithoutIcon}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HeroContentPlacementStates">
                                <VisualState x:Name="HeroContentTop">
                                    <!--<VisualState.Setters>
                                        <Setter Target="HeroContentBorder.(Grid.Row)" Value="0"/>
                                        <Setter Target="HeroContentBorder.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}"/>
                                        <Setter Target="HeroContentBorder.CornerRadius" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="HeroContentBottom">
                                    <!--<VisualState.Setters>
                                        <Setter Target="HeroContentBorder.(Grid.Row)" Value="2"/>
                                        <contract7Present:Setter Target="HeroContentBorder.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="HeroContentBorder.CornerRadius" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PlacementStates">
                                <VisualState x:Name="Top">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>

                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>

                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10, 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="Bottom">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessBottom}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Visible"/>
                                        <Setter Target="TopTailPolygonHighlight.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="Left">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessLeft}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="Right">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessRight}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="TopRight">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="TopLeft">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="BottomRight">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessBottom}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Visible"/>
                                        <Setter Target="TopTailPolygonHighlight.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="BottomLeft">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessBottom}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Visible"/>
                                        <Setter Target="TopTailPolygonHighlight.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="LeftTop">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessLeft}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="LeftBottom">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessLeft}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="RightTop">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessRight}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="RightBottom">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessRight}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="Center">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <contract7Present:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <contract7NotPresent:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={DynamicResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10, 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                                <VisualState x:Name="Untargeted">
                                    <!--<VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessUntargeted}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>-->
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid MinHeight="{DynamicResource TeachingTipMinHeight}" 
                              MinWidth="{DynamicResource TeachingTipMinWidth}"
                              MaxHeight="{DynamicResource TeachingTipMaxHeight}"
                              MaxWidth="{DynamicResource TeachingTipMaxWidth}"
                              AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                            </Grid.RowDefinitions>
                            <!-- This TailEdgeBorder needs to be z ordered underneath the TailPolygon while the TailOcclusionGrid needs to be over it, hence declaring these parts
                                 in this order. This is to achieve the desired occlusion of the tail's content edge border. The tail edge border is a low opacity highlight,
                                 which means we need to have the background color present underneath the highlight, hence the double grid here. -->
                            <Grid x:Name="TailEdgeBorder" Background="{TemplateBinding Background}">
                                <Grid Background="{TemplateBinding BorderBrush}"/>
                            </Grid>
                            <Polygon x:Name="TailPolygon"
                                     Fill="{TemplateBinding Background}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="{StaticResource TeachingTipBorderThickness}"/>
                            <Grid x:Name="TailOcclusionGrid" 
                                  HorizontalAlignment="Left" 
                                  VerticalAlignment="Top" 
                                  MinHeight="{DynamicResource TeachingTipMinHeight}" 
                                  MinWidth="{DynamicResource TeachingTipMinWidth}"
                                  MaxHeight="{DynamicResource TeachingTipMaxHeight}"
                                  MaxWidth="{DynamicResource TeachingTipMaxWidth}"
                                  Grid.ColumnSpan="5"
                                  Grid.RowSpan="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                </Grid.RowDefinitions>
                                <Polygon x:Name="TopTailPolygonHighlight"
                                         Grid.Row="0"
                                         Grid.Column="2"
                                         Margin="{StaticResource TeachingTipTopHighlightOffsetForBorder}"
                                         VerticalAlignment="Top"
                                         Fill="{TemplateBinding Background}"
                                         Stroke="{DynamicResource TeachingTipTopHighlightBrush}"
                                         StrokeThickness="{StaticResource TeachingTipTopHighlightHeight}"
                                         Points="0,10 10,0 20,10"/>
                                <!-- AutomationProperties.LandmarkType="Custom" -->
                                <Border x:Name="ContentRootBorder"
                                        Background="{TemplateBinding Background}"
                                        FlowDirection="{TemplateBinding FlowDirection}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{TemplateBinding CornerRadius}"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="3"
                                        Grid.RowSpan="3">
                                    <Grid x:Name="ContentRootGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Border x:Name="HeroContentBorder"
                                                Grid.Row="0"
                                                Child="{TemplateBinding HeroContent}"
                                                Background="{TemplateBinding Background}"/>
                                        <Grid x:Name="NonHeroContentRootGrid" Grid.Row="1">
                                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                <StackPanel Margin="{StaticResource TeachingTipContentMargin}">
                                                    <Grid Grid.Row="0">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <ContentPresenter x:Name="IconPresenter" Grid.Column="0" TextBlock.Foreground="{TemplateBinding Foreground}">
                                                            <Border Child="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IconElement}"/>
                                                        </ContentPresenter>
                                                        <StackPanel x:Name="TitlesStackPanel" Grid.Column="1">
                                                            <TextBlock x:Name="TitleTextBlock" Grid.Column="0" Text="{TemplateBinding Title}" TextWrapping="Wrap"
                                                                       Foreground="{DynamicResource TeachingTipTitleForegroundBrush}" FontFamily="{TemplateBinding FontFamily}"
                                                                       FontWeight="SemiBold"/>
                                                            <TextBlock x:Name="SubtitleTextBlock" Grid.Row="1" Text="{TemplateBinding Subtitle}"
                                                                       Foreground="{DynamicResource TeachingTipSubtitleForegroundBrush}" FontFamily="{TemplateBinding FontFamily}"
                                                                       TextWrapping="Wrap"/>
                                                        </StackPanel>
                                                    </Grid>
                                                    <Border Background="{TemplateBinding Background}">
                                                        <ContentPresenter x:Name="MainContentPresenter" Grid.Row="1" Content="{TemplateBinding Content}"
                                                                          TextBlock.Foreground="{TemplateBinding Foreground}" TextBlock.FontSize="{TemplateBinding FontSize}"
                                                                          TextBlock.FontWeight="{TemplateBinding FontWeight}" TextBlock.FontStyle="{TemplateBinding FontStyle}"
                                                                          TextBlock.FontFamily="{TemplateBinding FontFamily}" TextBlock.FontStretch="{TemplateBinding FontStretch}"/>
                                                    </Border>
                                                    <Grid Grid.Row="2">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Button x:Name="ActionButton"
                                                                HorizontalAlignment="Stretch"
                                                                Content="{TemplateBinding ActionButtonContent}"
                                                                Style="{TemplateBinding ActionButtonStyle}"
                                                                Command="{TemplateBinding ActionButtonCommand}"
                                                                CommandParameter="{TemplateBinding ActionButtonCommandParameter}"/>
                                                        <Button x:Name="CloseButton"
                                                                HorizontalAlignment="Stretch"
                                                                Content="{TemplateBinding CloseButtonContent}"
                                                                Style="{TemplateBinding CloseButtonStyle}"
                                                                Command="{TemplateBinding CloseButtonCommand}"
                                                                CommandParameter="{TemplateBinding CloseButtonCommandParameter}"
                                                                Grid.Column="1"/>
                                                    </Grid>
                                                </StackPanel>
                                            </ScrollViewer>
                                            <Button x:Name="AlternateCloseButton"
                                                    Width="{StaticResource TeachingTipAlternateCloseButtonSize}"
                                                    Height="{StaticResource TeachingTipAlternateCloseButtonSize}"
                                                    Background="Transparent"
                                                    VerticalAlignment="Top"
                                                    HorizontalAlignment="Right"
                                                    BorderThickness="{DynamicResource TeachingTipAlternateCloseButtonBorderThickness}">
                                                <Viewbox Width="{StaticResource TeachingTipAlternateCloseButtonGlyphSize}"
                                                         Height="{StaticResource TeachingTipAlternateCloseButtonGlyphSize}">
                                                    <ui:SymbolIcon Symbol="Cancel"/>
                                                </Viewbox>
                                            </Button>
                                        </Grid>
                                    </Grid>
                                </Border>
                                <Grid x:Name="TopHighlightLeft"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      Height="{StaticResource TeachingTipTopHighlightHeight}"
                                      VerticalAlignment="Top"
                                      HorizontalAlignment="Stretch" 
                                      Background="{DynamicResource TeachingTipTopHighlightBrush}"
                                      Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateInternal.TopLeftHighlightMargin}"/>
                                <Grid x:Name="TopHighlightRight"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      Height="{StaticResource TeachingTipTopHighlightHeight}"
                                      VerticalAlignment="Top"
                                      HorizontalAlignment="Stretch"
                                      Background="{DynamicResource TeachingTipTopHighlightBrush}"
                                      Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopRightHighlightMargin}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>